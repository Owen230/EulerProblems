/* 

Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:
1,2,3,5,8,13,21,34,55,89....
By considering the terms in the Fibonacci sequence whose values do not exceed 4 million, find the sum of the even-valued
terms.

The 790106th person to have solved problem 2.
*/

#include <iostream>
using namespace std;

int Fibonacci(int x, int y){
    return x+y;
}

int main(){
    int n = 1, m = 2, sum = 3, evensum = 2;
    bool isOver = false;
    
    

    while(isOver == false){
        
        int nth = Fibonacci(m,n);

        if (nth <= 4000000){
            // Update Order of sequence, last two terms and update sum.
            n = m;
            m = nth;
            sum += nth;
            if((nth%2)==0){
                evensum+=nth;
            }
            // cout << nth << "-> " << sum << "\n";
        }else{
            cout << "Fibonacci sequence sum is: " << sum << "\n";
            cout << "Even Fibonacci sequence sum is: " << evensum << "\n";
            isOver = true;
        }

    }
}

